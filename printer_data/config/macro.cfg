[gcode_macro SHUTDOWN_MACHINE]

gcode:
    {action_call_remote_method("shutdown_machine")}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    {% set X = params.X|default(10) %}
    {% set Y = params.Y|default(10) %}
    {% set E = params.E|default(2) %}
    {% set Z = params.Z|default(150) %}
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(2) %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    M106 S0
    G91
    G1 Z5
    G90
    G1 X5 Y105
    M84

[gcode_macro PID_E]
gcode:
  {% set T = params.T|default(255) %}
  PID_CALIBRATE HEATER=extruder TARGET={T}

[gcode_macro PID_B]
gcode:
  {% set T = params.T|default(80) %}
  PID_CALIBRATE HEATER=heater_bed TARGET={T}

[gcode_macro FILAMENT_CHANGE]
gcode:
    SAVE_GCODE_STATE NAME=FILAMENT_CHANGE_STATE
    {% set timer = params.T|default(300)|float %}
    {% set unload = params.U|default(100)|float %}
    {% set load = params.L|default(100)|float %}
    {% if printer.pause_resume.is_paused %}
        { action_respond_info("Already paused") }
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            { action_respond_info("Homing") }
            G28                                                                 # домой если не уже не дома)
        {% else %}
            { action_respond_info("Pausing print") }
            PAUSE
        {% endif %}
    {% endif %}
    { action_respond_info("Changing filament") } 
    SET_IDLE_TIMEOUT TIMEOUT=7200
    FILAMENT_UNLOAD U={unload}
    COUNTDOWN TIME={timer} MSG="Change filament! : "
    FILAMENT_LOAD L={load}
    RESTORE_GCODE_STATE NAME=FILAMENT_CHANGE_STATE
    {% if printer.pause_resume.is_paused %}
        { action_respond_info("continue print") } 
        RESUME
    {% endif %}

[gcode_macro FILAMENT_LOAD]
gcode:
    {% set load = params.L|default(100)|float * 0.5 %}
    {% set extruder_temp = params.T|default(240)|float %}
    SAVE_GCODE_STATE NAME=FILAMENT_LOAD_STATE
    LOW_TEMP_CHECK T={extruder_temp}
    { action_respond_info("Loading filament") }  
    M83                                                                         # относительное выдавливание
    G1 E{load} F720                                                           # быстрая часть загрузки
    G4 P1000                                                                    # ждем секунду
    G1 E{load} F200                                                             # медленно вторую половину
    #BEEP
    RESTORE_GCODE_STATE NAME=FILAMENT_LOAD_STATE

[gcode_macro FILAMENT_UNLOAD]
gcode:
    {% set unload = params.U|default(100)|float %}
    {% set extruder_temp = params.T|default(195)|float %} # температура по умолчанию 195.. правим если надо
    SAVE_GCODE_STATE NAME=FILAMENT_UNLOAD_STATE
    LOW_TEMP_CHECK T={extruder_temp}
    { action_respond_info("Unloading filament") }
    M83                                                                         # относительное выдавливание
    G1 E2  F200                                                                 # немного выдавливаем
    G1 E-10  F200                                                               # немного возвращаем
    G1 E-{unload} F720                                                         # вынимаем остаток
    BEEP
    RESTORE_GCODE_STATE NAME=FILAMENT_UNLOAD_STATE

[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set extruder_temp = params.T|default(240)|float %}
    {% if printer.extruder.target > extruder_temp %}                            # if there is a setpoint for extruder
        {% set extruder_temp = printer.extruder.target %}
    {% endif %}
    {% if printer.extruder.temperature < extruder_temp %}                       # нагрев до целевой температуры
        { action_respond_info("Heating to %s" % extruder_temp) } # я криворукий и что то неправильно пишуюю исправьте если можете
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    {% endif %}
[gcode_macro M600]                                                              # коды чтобы в слайсере не заморачиваться
gcode:
    FILAMENT_CHANGE

[gcode_macro M701]                                                              # коды чтобы в слайсере не заморачиваться
gcode:
    FILAMENT_LOAD

[gcode_macro M702]                                                              # коды чтобы в слайсере не заморачиваться
gcode:
    FILAMENT_UNLOAD

[gcode_macro COUNTDOWN]
gcode:
    {% set timer = params.TIME|default(10)|int %}
    {% set message = params.MSG|default("Time: ") %}
    # countdown
    {% if timer > 60 %}
        {% for s in range(timer, 60, -10) %}
            M118 { "%s %s sec"%(message, s) }
            G4 P10000  # пауза 10 секунд
        {% endfor %}
        {% set timer = 60 %}
    {% endif %}
    {% if timer > 10 %}
        {% for s in range(timer, 10, -5) %}
            M118 { "%s %s sec"%(message, s) }
            G4 P5000   # пауза 5 секунд
        {% endfor %}
        {% set timer = 10 %}
    {% endif %}
    {% if timer > 0 %}
        {% for s in range(timer, 0, -1) %}
            M118 { "%s %s sec"%(message, s) }
            G4 P1000   # пауза 1 секунда
        {% endfor %}
    {% endif %}
    M118 { "%s finished"%(message) }
    BEEP

[gcode_macro CENTER_XY]
gcode:
    G1 X130 Y65 F7800

[gcode_macro BED_CALIBRATE]
gcode:
    M140 S60             # Установить температуру стола на 70 градусов
    M190 S60             # Подождать, пока стол нагреется до 70 градусов
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE
    SAVE_CONFIG

[gcode_macro BED_MESH_PROFILE]
gcode:
    BED_MESH_PROFILE LOAD="default"

[gcode_macro SCREWS_ADJUST]
gcode:
    M140 S60             # Установить температуру стола на 70 градусов
    M190 S60             # Подождать, пока стол нагреется до 70 градусов
    G28
    SCREWS_TILT_CALCULATE

[gcode_macro CALIBRATE_BLTOUCH_OFFSET]
gcode:
    M140 S60             # Установить температуру стола на 70 градусов
    M190 S60             # Подождать, пока стол нагреется до 70 градусов
    G28                  # Вернуться в начальное положение
    CENTER_XY
    PROBE_CALIBRATE      # Начать калибровку датчика


[gcode_macro Clean_nozle]
gcode:
   G1 X1 Y20 F10000 
   G1 X1 Y130 F10000
   G1 X1 Y70 F10000
   G1 X1 Y130 F10000
   G1 X1 Y70 F10000
   G1 X1 Y130 F10000
   G1 X1 Y20 F10000

# [gcode_macro POWER_LOSS_RECOVERY]
# gcode:
#   {% if printer.save_variables.variables.power_loss_recovery|default(0)|int == 1 %}
#     M118 Restoring print after power loss
#     M117 File: {printer.save_variables.variables.pl_file_path}

#     # load file
#     M23 {printer.save_variables.variables.pl_file_path}
#     M26 S{printer.save_variables.variables.pl_file_position}

#     # heating up
#     M104 S{printer.save_variables.variables.pl_extruder_temp|int}
#     M140 S{printer.save_variables.variables.pl_bed_temp|int}

#     M109 S{printer.save_variables.variables.pl_extruder_temp|int}
#     M190 S{printer.save_variables.variables.pl_bed_temp|int}

#     G28 X Y
#     SET_GCODE_OFFSET Z={printer.save_variables.variables.pl_z_offset} MOVE=0
#     # big enough value to cover safe_z_home.z_hop value
#     SET_KINEMATIC_POSITION Z=20

#     # default speed for prepare movements
#     G1 F{50 * 60}

#     # move to position and left a little before poo
#     G1 X{printer.save_variables.variables.pl_gcode_position_x - 5} Y{printer.save_variables.variables.pl_gcode_position_y}

#     # lowering in case z home is active
#     G91
#     {% if "safe_z_home" in printer.configfile.config %}
#       G1 Z-{printer.configfile.config.safe_z_home.z_hop}
#     {% endif %}

#     M117 Extruding filament before print, please remove ooze if possible
#     # some extra poo
#     M83
#     G1 E2 F120

#     M117 Moving to position
#     # move to position
#     {% if printer.save_variables.variables.pl_extra_z > 0 %}
#       G1 Z-{printer.save_variables.variables.pl_extra_z}
#     {% endif %}
#     G1 X5

#     # restoring all parameters
#     M221 S{printer.save_variables.variables.pl_extrude_factor * 100}
#     M220 S{printer.save_variables.variables.pl_speed_factor * 100}
#     {% if printer.save_variables.variables.pl_absolute_extrude|default(False) %}
#       M117 Absolute extrusion
#       M82
#     {% else %}
#       M117 Relative extrusion
#       M83
#     {% endif %}
#     {% if printer.save_variables.variables.pl_absolute_coordinates|default(False) %}
#       M117 Absolute coordinates
#       G90
#     {% else %}
#       M117 Relative coordinates
#       G91
#     {% endif %}
#     SET_KINEMATIC_POSITION Z={printer.save_variables.variables.pl_kin_position_z}

#     M117 Applying miscelanious parameters 

#     SET_PRESSURE_ADVANCE ADVANCE={printer.save_variables.variables.pl_pressure_advance} SMOOTH_TIME={printer.save_variables.variables.pl_smooth_time}
#     SET_VELOCITY_LIMIT ACCEL={printer.save_variables.variables.pl_accel} ACCEL_TO_DECEL={printer.save_variables.variables.pl_accel_to_decel} VELOCITY={printer.save_variables.variables.pl_velocity} SQUARE_CORNER_VELOCITY={printer.save_variables.variables.pl_sqv}

#     # apply last speed
#     G1 F{printer.save_variables.variables.pl_speed}
#     M106 S{printer.save_variables.variables.pl_fan_speed|int}

#     # resume printing
#     M24
#   {% endif %}


# [gcode_macro POWER_LOSS]
# gcode:
#   M117 Power loss! Saving print state now!

#   POWER_LOSS_SAVE

#   # raising to not damage model
#   G91
#   G1 Z10

#   SAVE_VARIABLE VARIABLE="pl_extra_z" VALUE=10

#   # uncomment and change to desired park position
#   #G90
#   #G1 X0 Y0

#   # save_config is optional, it's there for saving bed mesh, actually. can be safely commented out, and then pause may be uncommented
#   SAVE_CONFIG
#   #PAUSE


# [gcode_macro POWER_LOSS_SAVE]
# gcode:
#   SAVE_VARIABLE VARIABLE="pl_file_path" VALUE="\"{printer.print_stats.filename}\""
#   SAVE_VARIABLE VARIABLE="pl_file_position" VALUE={printer.virtual_sdcard.file_position}

#   SAVE_VARIABLE VARIABLE="pl_speed_factor" VALUE={printer.gcode_move.speed_factor}
#   SAVE_VARIABLE VARIABLE="pl_speed" VALUE={printer.gcode_move.speed}

#   SAVE_VARIABLE VARIABLE="pl_extrude_factor" VALUE={printer.gcode_move.extrude_factor}
#   SAVE_VARIABLE VARIABLE="pl_absolute_coordinates" VALUE={printer.gcode_move.absolute_coordinates}
#   SAVE_VARIABLE VARIABLE="pl_absolute_extrude" VALUE={printer.gcode_move.absolute_extrude}

#   SAVE_VARIABLE VARIABLE="pl_gcode_position_x" VALUE={printer.gcode_move.gcode_position.x}
#   SAVE_VARIABLE VARIABLE="pl_gcode_position_y" VALUE={printer.gcode_move.gcode_position.y}
#   SAVE_VARIABLE VARIABLE="pl_gcode_position_z" VALUE={printer.gcode_move.gcode_position.z}
#   SAVE_VARIABLE VARIABLE="pl_gcode_position_e" VALUE={printer.gcode_move.gcode_position.e}

#   SAVE_VARIABLE VARIABLE="pl_kin_position_x" VALUE={printer.toolhead.position.x}
#   SAVE_VARIABLE VARIABLE="pl_kin_position_y" VALUE={printer.toolhead.position.y}
#   SAVE_VARIABLE VARIABLE="pl_kin_position_z" VALUE={printer.toolhead.position.z}
#   SAVE_VARIABLE VARIABLE="pl_kin_position_e" VALUE={printer.toolhead.position.e}

#   SAVE_VARIABLE VARIABLE="pl_fan_speed" VALUE={printer.fan.speed * 255}

#   SAVE_VARIABLE VARIABLE="pl_z_offset" VALUE={printer.gcode_move.homing_origin.z}

#   SAVE_VARIABLE VARIABLE="pl_extruder_temp" VALUE={printer.extruder.target}
#   SAVE_VARIABLE VARIABLE="pl_bed_temp" VALUE={printer.heater_bed.target}

#   SAVE_VARIABLE VARIABLE="pl_pressure_advance" VALUE={printer.extruder.pressure_advance}
#   SAVE_VARIABLE VARIABLE="pl_smooth_time" VALUE={printer.extruder.smooth_time}

#   SAVE_VARIABLE VARIABLE="pl_retract_length" VALUE={printer.firmware_retraction.retract_length}
#   SAVE_VARIABLE VARIABLE="pl_retract_speed" VALUE={printer.firmware_retraction.retract_speed}
#   SAVE_VARIABLE VARIABLE="pl_unretract_speed" VALUE={printer.firmware_retraction.unretract_speed}

#   SAVE_VARIABLE VARIABLE="pl_velocity" VALUE={printer.toolhead.max_velocity}
#   SAVE_VARIABLE VARIABLE="pl_accel" VALUE={printer.toolhead.max_accel}
#   SAVE_VARIABLE VARIABLE="pl_accel_to_decel" VALUE={printer.toolhead.max_accel_to_decel}
#   SAVE_VARIABLE VARIABLE="pl_sqv" VALUE={printer.toolhead.square_corner_velocity}

#   SAVE_VARIABLE VARIABLE="pl_extra_z" VALUE=0


# [gcode_macro M413]
# gcode:
#   {% if not "S" in params %}
#     {% if printer.save_variables.variables.power_loss_recovery|default(0)|int == 1 %}
#       M118 Power-loss recovery ON
#     {% else %}
#       M118 Power-loss recovery OFF
#     {% endif %}
#   {% else %}
#     SAVE_VARIABLE VARIABLE="power_loss_recovery" VALUE={params.S}
#   {% endif %}


# [gcode_macro POWER_LOSS_TIMER_START]
# gcode:
#   UPDATE_DELAYED_GCODE ID=POWER_LOSS_SAVE DURATION=1


# [gcode_macro POWER_LOSS_TIMER_STOP]
# gcode:
#   UPDATE_DELAYED_GCODE ID=POWER_LOSS_SAVE DURATION=0


# [delayed_gcode POWER_LOSS_SAVE]
# initial_duration: 0
# gcode:
#   POWER_LOSS_SAVE
#   UPDATE_DELAYED_GCODE ID=POWER_LOSS_SAVE DURATION=1